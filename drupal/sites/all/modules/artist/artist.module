<?php 
// $Id$


module_load_include('inc', 'airplay_base', 'airplay_base_url_functions');  
module_load_include('inc', 'artist', 'artist_parse_url');  
module_load_include('inc', 'artist', 'artist_music_db_functions');  
module_load_include('inc', 'artist', 'artist_display_artist');  
module_load_include('inc', 'prices', 'prices_display_artist');  




/**
* Implementation of hook_block
* @param string $op one of "list", "view", "save" and "configure"
* @param integer $delta code to identify the block
* @param array $edit only for "save" operation
**/
function artist_block($op = 'list', $delta = 0, $edit = array()) 
{ 
	if ($op == "list") {
		// Generate listing of blocks from this module, for the admin/block page
		$block = array();
		$block[0]["info"] = t('Artist');
		return $block;
	  }
	else if ($op == 'view') {
		// Generate our block content
		
		// content variable that will be returned for display
		$block_content = '';
		
		$today = getdate();
		$start_time = mktime(0, 0, 0,$today['mon'], ($today['mday'] - 7), $today['year']);	// calculate midnight one week ago
		$end_time = time();
		
/*		$query = "SELECT nid, title, created FROM " .
					"{node} WHERE created >= '%d' " .
					" AND created <= '%d'";
		$query_result =  db_query($query, $start_time, $end_time);*/
		
		$limitnum = variable_get("artist_maxdisp", 3);
		
		$query = "SELECT nid, title, created FROM " .
				"{node} WHERE created >= %d " .
				"AND created <= %d";
		
		$query_result = db_query_range($query, $start_time, $end_time, 0, $limitnum);
		
		while ($links = db_fetch_object($query_result)) {
			$block_content .= l($links->title, 'node/'.$links->nid) . '<br />';
		}
		
		// check to see if there was any content before returning
		//  the block view
		if ($block_content == '') {  
			// no content from last week ago
			$block['subject'] = 'Artist';
			$block['content'] = 'Sorry No Content';
			return $block;
		}
		// add a more link to our page that displays all the links
		$options = array( "attributes" => array("title" => t("More events on this day.") ) );
		$link = l( t("more"), "artist", $options );
		$block_content .= "<div class=\"more-link\">" . $link . "</div>";
		
		// set up the block
		$block['subject'] = 'Artist';
		$block['content'] = $block_content;
		
		return $block;
	}
} // function artist_block




function artist_admin() 
{
	$form = array();
	
	$form['artist_maxdisp'] = array(
		'#type' => 'textfield',
		'#title' => t('Maximum number of links'),
		'#default_value' => variable_get('artist_maxdisp', 3),
		'#size' => 2,
		'#maxlength' => 2,
		'#description' => t("The maximum number of links to display in the block."),
		'#required' => TRUE,
	);
	
	return system_settings_form($form);
}

function artist_menu() 
{
    global $AP_ARTIST_SUB_URL;

	$items = array();
	
	$items['admin/settings/artist'] = array(
		'title' => 'Artist module settings',
		'description' => 'Setup display settings for Artist pages',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('artist_admin'),
		'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
	);

    $items['kunstner'] = array(
        'title' => '',
        'page callback' => 'artist_all',
        'access arguments' => array('access artist content'),
        'type' => MENU_CALLBACK
    );
    $items['artist'] = array(
        'title' => '',
        'page callback' => 'artist_all',
        'access arguments' => array('access artist content'),
        'type' => MENU_CALLBACK
    );

	return $items;
}

function artist_admin_validate($form, &$form_state) {
	$maxdisp = $form_state['values']['artist_maxdisp'];
	if (!is_numeric($maxdisp)) {
		form_set_error('artist_maxdisp', t('You must enter an integer for the maximum number of links.'));
	}
	else if ($maxdisp <= 0) {
		form_set_error('artist_maxdisp', t('Maximum number of links must be positive.'));
	}
}

/**
* Valid permissions for this module
* @return array An array of valid permissions for the artist module
*/
function artist_perm() {
	return array('access artist content');
} // function artist_perm()


/**
* Display help and module information
* @param path which path of the site we're displaying help
* @param arg array that holds the current path as would be returned from arg() function
* @return help text for the path
*/
function artist_help($path, $arg) {
	$output = '';  //declare your output variable
	switch ($path) {
		case "admin/help#artist":
		$output = '<p>'.  t("Displays the artist page in AirplayMusic Drupal CMS") .'</p>';
		break;
	}
	return $output;
} // function artist_help


